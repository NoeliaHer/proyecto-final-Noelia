---
import LayoutPortal from "../layouts/layoutPortal.astro";
---

<LayoutPortal title="Listado">
  <div class="max-w-6xl m-8">
    <h1 class="text-3xl font-bold mb-8">Listado de animales</h1>
    <!-- Formulario para agregar un nuevo animal -->
    <form id="formulario" class="mb-8 w-full">
      <div class="flex mb-4">
        <div class="w-1/2 mr-4">
          <label for="nombre" class="block text-sm font-medium text-gray-700">Nombre:</label>
          <input type="text" id="nombre" class="mt-1 focus:ring-indigo-500 focus:border-indigo-500 block w-full shadow-sm sm:text-sm border-gray-300 rounded-md" required>
        </div>
        <div class="w-1/2">
          <label for="precio" class="block text-sm font-medium text-gray-700">Edad:</label>
          <input type="number" id="precio" class="mt-1 focus:ring-indigo-500 focus:border-indigo-500 block w-full shadow-sm sm:text-sm border-gray-300 rounded-md" required>
        </div>
      </div>
      <div class="flex mb-4">
        <div class="w-1/2 mr-4">
          <label for="imagen" class="block text-sm font-medium text-gray-700">Nombre de la imagen:</label>
          <input type="text" id="imagen" class="mt-1 focus:ring-indigo-500 focus:border-indigo-500 block w-full shadow-sm sm:text-sm border-gray-300 rounded-md">
        </div>
        <div class="w-1/2">
          <label for="raza" class="block text-sm font-medium text-gray-700">Raza:</label>
          <input type="text" id="raza" class="mt-1 focus:ring-indigo-500 focus:border-indigo-500 block w-full shadow-sm sm:text-sm border-gray-300 rounded-md">
        </div>
      </div>
      <div class="flex mb-4">
        <div class="w-1/2 mr-4">
          <label for="descripcion" class="block text-sm font-medium text-gray-700">Descripción:</label>
          <input type="text" id="descripcion" class="mt-1 focus:ring-indigo-500 focus:border-indigo-500 block w-full shadow-sm sm:text-sm border-gray-300 rounded-md">
        </div>
        <div class="w-1/2">
          <label for="fecha_entrada" class="block text-sm font-medium text-gray-700">Fecha de entrada:</label>
          <input type="date" id="fecha_entrada" class="mt-1 focus:ring-indigo-500 focus:border-indigo-500 block w-full shadow-sm sm:text-sm border-gray-300 rounded-md">
        </div>
      </div>
      <div class="mb-4">
        <label for="especie" class="block text-sm font-medium text-gray-700">Especie:</label>
        <input type="text" id="especie" class="mt-1 focus:ring-indigo-500 focus:border-indigo-500 block w-full shadow-sm sm:text-sm border-gray-300 rounded-md">
      </div>
      <button type="submit" class="inline-flex items-center px-4 py-2 border border-transparent text-base font-medium rounded-md shadow-sm text-white bg-indigo-600 hover:bg-indigo-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500">Agregar</button>
    </form>
    
    <!-- Tabla para mostrar el listado de animales -->
    <div class="w-full">
      <table id="tabla" class="w-full bg-white shadow-md rounded">
        <thead class="bg-indigo-500 text-white">
          <tr>
            <th class="px-4 py-2">ID</th>
            <th class="px-4 py-2">Nombre</th>
            <th class="px-4 py-2">Edad</th>
            <th class="px-4 py-2">Imagen</th>
            <th class="px-4 py-2">Raza</th>
            <th class="px-4 py-2">Descripción</th>
            <th class="px-4 py-2">Fecha de Entrada</th>
            <th class="px-4 py-2">Especie</th>
            <th class="px-4 py-2">Estado</th>
            <th class="px-4 py-2">Acciones</th>
          </tr>
        </thead>
        <tbody>
          <!-- Aquí se generarán las filas de la tabla dinámicamente -->
        </tbody>
      </table>
    </div>
  </div>

  <script>
    // Datos iniciales de prueba para la tabla
    let items = [
      { id: 1, nombre: "Lucas", precio: 100, imagen: "lucas.jpg", raza: "Labrador", descripcion: "Perro muy activo y juguetón", fecha_entrada: "2024-06-10", especie: "Perro", estado: "Disponible" },
      { id: 2, nombre: "Sasha", precio: 150, imagen: "sasha.jpg", raza: "Maine Coon", descripcion: "Gato tranquilo y cariñoso", fecha_entrada: "2024-06-10", especie: "Gato", estado: "Reservado" },
    ];

    // Función para eliminar un elemento de la lista
    const eliminarItem = (id) => {
      const index = items.findIndex((item) => item.id === id);
      if (index !== -1) {
        items.splice(index, 1);
        actualizarTabla();
      }
    };

    // Función para editar un elemento de la lista
    const editarItem = (id) => {
      const index = items.findIndex((item) => item.id === id);
      if (index !== -1) {
        const nuevoNombre = prompt("Ingrese el nuevo nombre:");
        const nuevoPrecio = parseFloat(prompt("Ingrese la nueva edad:"));
        const nuevaImagen = prompt("Ingrese el nombre de la nueva imagen (sin la extensión):");
        const nuevaRaza = prompt("Ingrese la nueva raza:");
        const nuevaDescripcion = prompt("Ingrese la nueva descripción:");
        const nuevaFechaEntrada = prompt("Ingrese la nueva fecha de entrada:");
        const nuevaEspecie = prompt("Ingrese la nueva especie:");
        const nuevoEstado = prompt("Ingrese el nuevo estado (Disponible/Reservado/Adoptado):");
        if (nuevoNombre && !isNaN(nuevoPrecio) && nuevaImagen && nuevaRaza && nuevaDescripcion && nuevaFechaEntrada && nuevaEspecie && nuevoEstado) {
          items[index].nombre = nuevoNombre;
          items[index].precio = nuevoPrecio;
          items[index].imagen = nuevaImagen + ".jpg";
          items[index].raza = nuevaRaza;
          items[index].descripcion = nuevaDescripcion;
          items[index].fecha_entrada = nuevaFechaEntrada;
          items[index].especie = nuevaEspecie;
          items[index].estado = nuevoEstado;
          actualizarTabla();
        } else {
          alert("Por favor, ingrese datos válidos.");
        }
      }
    };

    // Función para renderizar la tabla
    const actualizarTabla = () => {
      const tbody = document.querySelector("table tbody");
      tbody.innerHTML = ""; // Limpiar tabla antes de actualizar
      items.forEach((item) => {
        const row = document.createElement("tr");
        row.innerHTML = `
          <td class="border px-4 py-2">${item.id}</td>
          <td class="border px-4 py-2">${item.nombre}</td>
          <td class="border px-4 py-2">${item.precio}</td>
          <td class="border px-4 py-2"><img src="/animales/${item.imagen}" alt="Imagen de ${item.nombre}" class="h-16 w-auto"></td>
          <td class="border px-4 py-2">${item.raza}</td>
          <td class="border px-4 py-2">${item.descripcion}</td>
          <td class="border px-4 py-2">${item.fecha_entrada}</td>
          <td class="border px-4 py-2">${item.especie}</td>
          <td class="border px-4 py-2" id="estado-${item.id}">
            <span>${item.estado}</span>
            <select data-id="${item.id}" class="estado-select block w-full text-sm border-gray-300 rounded-md focus:ring-indigo-500 focus:border-indigo-500">
              <option value="Disponible" ${item.estado === "Disponible" ? "selected" : ""}>Disponible</option>
              <option value="Reservado" ${item.estado === "Reservado" ? "selected" : ""}>Reservado</option>
              <option value="Adoptado" ${item.estado === "Adoptado" ? "selected" :                   ""}>Adoptado</option>
            </select>
          </td>
          <td class="border px-4 py-2">
            <button data-id="${item.id}" class="edit-btn bg-indigo-500 hover:bg-indigo-700 text-white font-bold py-2 px-4 rounded">Editar</button>
            <button data-id="${item.id}" class="delete-btn bg-red-500 hover:bg-red-700 text-white font-bold py-2 px-4 rounded">Eliminar</button>
          </td>
        `;
        tbody.appendChild(row);
      });

  
      // Controladores de eventos para cambiar estado mediante select
      document.querySelectorAll('.estado-select').forEach(select => {
        select.addEventListener('change', (e) => {
          const id = parseInt(e.target.dataset.id);
          const nuevoEstado = e.target.value;
          editarEstadoSelect(id, nuevoEstado);
        });
      });
    };

    // Función para editar el estado de un elemento usando el select
    const editarEstadoSelect = (id, nuevoEstado) => {
      const index = items.findIndex((item) => item.id === id);
      if (index !== -1) {
        items[index].estado = nuevoEstado;
        actualizarTabla();
      }
    };


    // Controlar el envío del formulario para agregar un nuevo elemento
    document.getElementById('formulario').addEventListener('submit', (e) => {
      e.preventDefault();
      const nombre = document.getElementById('nombre').value;
      const precio = parseFloat(document.getElementById('precio').value);
      const imagen = document.getElementById('imagen').value;
      const raza = document.getElementById('raza').value;
      const descripcion = document.getElementById('descripcion').value;
      const fechaEntrada = document.getElementById('fecha_entrada').value;
      const especie = document.getElementById('especie').value;
      const estado = "Disponible"; // Estado inicial al agregar un nuevo animal
      if (nombre && !isNaN(precio) && imagen && raza && descripcion && fechaEntrada && especie) {
        const nuevoId = items.length + 1;
        const nuevoItem = { id: nuevoId, nombre: nombre, precio: precio, imagen: imagen + ".jpg", raza: raza, descripcion: descripcion, fecha_entrada: fechaEntrada, especie: especie, estado: estado };
        items.push(nuevoItem);
        actualizarTabla();
        document.getElementById('nombre').value = "";
        document.getElementById('precio').value = "";
        document.getElementById('imagen').value = "";
        document.getElementById('raza').value = "";
        document.getElementById('descripcion').value = "";
        document.getElementById('fecha_entrada').value = "";
        document.getElementById('especie').value = "";
      } else {
        alert("Por favor, ingrese datos válidos.");
      }
    });

    // Renderizar la tabla inicial
    actualizarTabla();
  </script>

</LayoutPortal>

